// PROCESS MANAGER MODULE 

alias funcNum R1;
alias cpid R2;
alias userAreaPage R3;
alias i R4;

// ------------------

// free userAreaPage
    if(funcNum == 2)then

        //  get the userAreaPage
            userAreaPage = [PROCESS_TABLE + cpid*16 + 11 ];

        // release page 
            multipush(R0,R1,R2,R3,R4);
            R1 = 2;
            R2 = userAreaPage;
            call MOD_2;
            multipop(R0,R1,R2,R3,R4);
            return;

    endif;

// ------------------

// exit 
    if(funcNum == 3)then
      
       // freepage table 
            multipush(R0,R1,R2,R3,R4);
            R1 = 4;
            R2 = cpid;
            call MOD_1;
            multipop(R0,R1,R2,R3,R4);
            return;

      // free userAreaPage 
            multipush(R0,R1,R2,R3,R4);
            R1 = 2;
            R2 = cpid;
            call MOD_1;
            multipop(R0,R1,R2,R3,R4);
            return;

      // set the status as TERMINATED 
            [PROCESS_TABLE + cpid*16 + 4] = TERMINATED;

      return;

    endif;

// ------------------

// free PageTable 
    if(funcNum == 4)then
    
            i = 4;
            PTBR = PAGE_TABLE_BASE + cpid*20;
            
            // invalidate Library Pages
            	[PTBR+0]=-1;
                [PTBR+1]="0000";
                [PTBR+2]=-1;
                [PTBR+3]="0000";

            while (i<20) do 

                    // release page 
                        multipush(R0,R1,R2,R3,R4);
                        R1 = 2;
                        R2 = [PTBR +i];
                        call MOD_2 ;
                        multipop(R0,R1,R2,R3,R4);

                    // invalidate each pagetable entry
                        [PTBR + i] = -1;
                        [PTBR + i+1] = "0000";
                    i = i+2 ;
            endwhile;
            return;

    endif;

// -----------------

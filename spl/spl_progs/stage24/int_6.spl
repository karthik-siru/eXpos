     alias pt R5;
     pt = PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 ;
//  set the mode 
     [pt + 9] = 7;

     alias userSP R1;
     userSP = SP;
     [pt+ 13] = SP;
     SP = [pt + 11]*512 -1;

//get fileDescriptor 
     alias fileDescriptor R2;
     alias retAddress R3;

     retAddress = ([PTBR + 2 *((userSP - 1)/512)]*512) +((userSP-1)%512);
     fileDescriptor=[[PTBR + 2 * ((userSP - 4)/ 512)] + (userSP - 4) % 512 ];

//TERMINAL 
     if(fileDescriptor == -1 )then
          alias word R4;
          word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];

          multipush(R0, R1,R2,R3,R4,R5,R6);

          R1 = TERMINAL_READ;
          R2 = [SYSTEM_STATUS_TABLE + 1];
          R3 = word;

          call MOD_4;
     
          multipop(R0, R1,R2,R3,R4,R5,R6);

          [retAddress] =0 ;
          [pt + 9] = 0;
          SP = userSP;
          ireturn;
//FILE 
     else 
          // invalid fileDescriptor 
          if(fileDescriptor <0 || fileDescriptor >7)then 
               [retAddress] = -1 ;
               [pt+9] =0 ;
               SP = userSP;
               ireturn;
          endif;

          // get resource-table entry 
          alias pid R4;
          alias userAreaPage R6;
          
          pid =  [SYSTEM_STATUS_TABLE +1];
          userAreaPage  = [pt +11];

          // get the fileDescriptor entry 
          alias fileEntry R7; 
          fileEntry = userAreaPage*512 + RESOURCE_TABLE_OFFSET + 2*fileDescriptor ;

          //not a file or invalid
          if([fileEntry] != FILE || [fileEntry] ==-1  )then 
               [retAddress] =-1;
               [pt+9] = 0;
               SP = userSP;
          ireturn;
          endif;

          alias openFileEntry R8;
          openFileEntry=OPEN_FILE_TABLE+4*[fileEntry+1];
          alias inodeIndex R9;
          inodeIndex=[openfileEntry];

          multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9);
               R1=ACQUIRE_INODE ; 
               R2=pid;
               R3=inodeIndex;
               call RESOURCE_MANAGER;
          multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
          // locking inode failed 
          if(R0 == -1 )then 
             [retAddress] = -1;
             [pt + 9] =0;
             SP = userSP;
             ireturn;
          endif;
          

     endif;



     
